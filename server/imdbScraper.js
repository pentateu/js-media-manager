var Promisse 	= require('./promisse');
var Util 		= require('./util');

//var jsdom  = require('jsdom');
//var jquery = fs.readFileSync("./jquery-1.8.2.min.js").toString();

var JSON_API_TITLE_SEARCH_URL = "http://www.imdb.com/xml/find?json=1&nr=1&tt=on&q=";

var IMDBScraper = module.exports = function(title) {
	//make sure it behaves as a constructor
	if ( ! (this instanceof IMDBScraper) ) {
		return new IMDBScraper(title);
	}

	var scrapeSearch = this.scrapeSearch = function(jQuery){
		var p = new Promisse();

		//Look for the table below 'Popular Titles'

		jQuery('a').each(function(){
			console.log( $(this).attr('href') );
		});

		return p;
	};

	//perform a search
	var search = this.search = function(retries){
		var p = new Promisse();

		var query = title.replace(' ','+');

		console.log('quering iMDB. query: ' + query);

		//query iMDB
		http.get(JSON_API_TITLE_SEARCH_URL + query, function(res) {
			console.log('STATUS: ' + res.statusCode);
		  	console.log('HEADERS: ' + JSON.stringify(res.headers));

		  	res.setEncoding('utf8');

		  	var content = "";

			//receive data
			res.on('data', function (chunk) {
				content += chunk;
			});

			//all data received
			res.on('end', function (chunk) {
				//transforma o content me JSON object

				var imdbResult = JSON.parse(content);

			});

		})
		.on('error', function(e) {
			console.log('problem with iMDB request: ' + e.message);
			p.reject(ERROR_IMDB_JSON_SERVICE.setCause(e));
		});



		/*
		//mock
		p.resolve(
			{
				"title" : "Fake title - from mock imdb scraper",
				"watched" : "false",
				"imdb" : {
					"title" : "Fake title - from mock imdb scraper",
					"year" : "2012",
					"id" : "tt1764651",
					"rating" : "7.1"
				}
			}
		);
		*/

		return p;
	};
};

//Define exceptions generated by this module
var ERROR_IMDB_JSON_SERVICE = IMDBScraper.ERROR_IMDB_JSON_SERVICE = Util.exception({code:55001, message:"Error Invoking IMDB JSON service"});

